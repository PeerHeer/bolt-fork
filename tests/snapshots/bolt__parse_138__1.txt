_mecha_lineno = [1], [1]
_mecha_helper_branch = _mecha_runtime.helpers['branch']
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_operator_not = _mecha_runtime.helpers['operator_not']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var2:
    _mecha_var0 = True
    while _mecha_var0:
        _mecha_var1 = 'hello'
        with _mecha_helper_branch(_mecha_var1) as _mecha_condition:
            if _mecha_condition:
                pass
        _mecha_var1 = _mecha_helper_operator_not(_mecha_var1)
        with _mecha_helper_branch(_mecha_var1) as _mecha_condition:
            if _mecha_condition:
                break
_mecha_var3 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var2))
---
output = _mecha_var3
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=65, lineno=6, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
