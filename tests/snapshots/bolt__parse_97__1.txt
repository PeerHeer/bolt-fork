_mecha_lineno = [1, 6], [1, 2]
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var8:
    def f():
        _mecha_var0 = f
        _mecha_var0 = _mecha_var0()
        _mecha_var1 = f
        _mecha_var1 = _mecha_var1()
        _mecha_var2 = 'other'
        _mecha_var3 = {}
        _mecha_var4 = {}
        _mecha_var5 = 'wat'
        _mecha_var6 = [_mecha_var3, _mecha_var4, _mecha_var5]
        _mecha_var7 = {_mecha_var0: _mecha_var1, _mecha_var2: _mecha_var6}
        return _mecha_var7
_mecha_var9 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var8))
---
output = _mecha_var9
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=54, lineno=2, colno=46)
  commands:
    <class 'mecha.ast.AstCommand'>
