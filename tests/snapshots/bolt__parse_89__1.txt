_mecha_lineno = [1, 7, 10], [1, 2, 3]
_mecha_helper_interpolate_json = _mecha_runtime.helpers['interpolate_json']
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var3:
    def f(x):
        _mecha_var0 = x
        _mecha_var0 = _mecha_helper_interpolate_json(_mecha_var0, _mecha_refs[0])
        _mecha_runtime.commands.append(_mecha_helper_replace(_mecha_refs[2], arguments=_mecha_helper_children([_mecha_refs[1], _mecha_var0])))
    _mecha_var1 = f
    _mecha_var2 = 'thing'
    _mecha_var1 = _mecha_var1(_mecha_var2)
_mecha_var4 = _mecha_helper_replace(_mecha_refs[3], commands=_mecha_helper_children(_mecha_var3))
---
output = _mecha_var4
---
_mecha_refs[0]
<class 'bolt.ast.AstInterpolation'>
  location: SourceLocation(pos=25, lineno=2, colno=16)
  end_location: SourceLocation(pos=26, lineno=2, colno=17)
  prefix: None
  converter: 'json'
  value:
    <class 'bolt.ast.AstIdentifier'>
_mecha_refs[1]
<class 'mecha.ast.AstSelector'>
  location: SourceLocation(pos=22, lineno=2, colno=13)
  end_location: SourceLocation(pos=24, lineno=2, colno=15)
  variable: 'a'
  arguments:
    <empty>
_mecha_refs[2]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=14, lineno=2, colno=5)
  end_location: SourceLocation(pos=26, lineno=2, colno=17)
  identifier: 'tellraw:targets:message'
  arguments:
    <class 'mecha.ast.AstSelector'>
    <class 'bolt.ast.AstInterpolation'>
_mecha_refs[3]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=38, lineno=4, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
    <class 'mecha.ast.AstCommand'>
