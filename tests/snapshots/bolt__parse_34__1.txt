_mecha_lineno = [1, 9, 15], [1, 2, 3]
_mecha_helper_branch = _mecha_runtime.helpers['branch']
_mecha_helper_get_rebind = _mecha_runtime.helpers['get_rebind']
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var4:
    _mecha_var0 = 1
    a = _mecha_var0
    _mecha_var1 = a
    _mecha_var2 = 1
    _mecha_var1 = _mecha_var1 == _mecha_var2
    with _mecha_helper_branch(_mecha_var1) as _mecha_condition:
        if _mecha_condition:
            _mecha_var3 = 0
            _mecha_rebind = _mecha_helper_get_rebind(a)
            a = _mecha_var3
            if _mecha_rebind is not None:
                a = _mecha_rebind(a)
_mecha_var5 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var4))
---
output = _mecha_var5
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=27, lineno=4, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
    <class 'mecha.ast.AstCommand'>
